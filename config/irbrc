#
# IRB settings by Joakim Tufvegren
#

require 'pp'
require 'irb/completion'
require 'irb/ext/save-history'
require 'rubygems'

IRB.conf[:PROMPT_MODE] = :SIMPLE
IRB.conf[:SAVE_HISTORY] = 500
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb_history"

begin
  require 'wirb'
  # Colorize to match vim syntax colors better.
  Wirb.schema = Wirb.schema.merge({
      # delimiter colors
      :comma              => [ :blue, :bright ],
      :refers             => [ :blue, :bright ],

      # container colors (hash and array)
      :open_hash          => [ :green, :bright ],
      :close_hash         => [ :green, :bright ],
      :open_array         => [ :green, :bright ],
      :close_array        => [ :green, :bright ],

      # object colors
      :open_object        => [ :red, :bright ],
      :object_class       => [ :white ],
      :object_addr_prefix => [ :blue, :bright ],
      :object_line_prefix => [ :blue, :bright ],
      :close_object       => [ :red, :bright ],

      # symbol colors
      :symbol             => [ :yellow, :bright ],
      :symbol_prefix      => [ :yellow, :bright ],

      # string colors
      :open_string        => [ :red, :bright ],
      :string             => [ :magenta, :bright ],
      :close_string       => [ :red, :bright ],

      # misc colors
      :number             => [ :magenta, :bright ],
      :keyword            => [ :magenta, :bright ],
      :class              => [ :green, :bright ],
      :range              => [ :red, :bright ],
      :unknown            => [ :white ]
  })
  Wirb.start
rescue LoadError
  # Ignore
end

# IRB improvements: Command history, coloring, more shell like commands cd, pwd, dir, cat
# Use powerful shell commands
# dir
# dir '**/*.rb'
# cd 'app'
# pwd
# cat 'config/environment.rb'
# dir('vendor/plugins/*').each do |d| inside_dir(d) {`git pull`} end
# Developed by umur dot ozkul at gmail dot com
require 'fileutils'
class Object
  def cd d, options={};              FileUtils.cd d, options;  end
  def pwd;                           FileUtils.pwd; end
  def dir d='*';                     Dir[d]; end
  alias ls dir
  def cat file;                      puts `cat #{file}`; end
  def ln_s old, new, options={};     FileUtils.ln_s old, new, options; end
  def mv file, new_file, options={}; FileUtils.mv file, new_file, options; end
  def rm list, options={};           FileUtils.rm list, options; end
  def mkdir dirname, options={};     FileUtils.mkdir dirname, options; end
  def touch list, options={};        FileUtils.touch list, options; end

  def inside_dir d, &block
      b = pwd
      begin
        cd d
        block.call
      ensure
        cd b
      end
  end
end

