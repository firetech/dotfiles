#!/usr/bin/env zsh

repo="${0:A:h}"
target="${HOME:A}"
src="$repo/config"
backup="$repo/backup/$(date +%Y%m%d_%H%M%S)"

. "$repo/.parse_config_map.zsh"

echo "Dotfiles installation"
echo "====================="
echo
echo "Target directory: $target"
echo " - XDG config: $xdg_config_dir"
echo " - XDG data: $xdg_data_dir"
echo "Source directory: $src"
echo
echo "Backup directory: $backup"
echo "(Conflicting files and directories will be moved here)"
echo

if [[ ! -O $src ]]; then
	echo "! $src is not owned by $(id -un)."
	echo "    You need your own clone of the git repository!"
	exit 1
fi

echo -n "Continue? [Y/n] "

read ans
if [[ "${ans:l}" = "n" ]]; then
	echo "Abort."
	exit 1
fi

check_status() {
	if [[ $? != 0 ]]; then
		echo "Failed!"
		exit 1
	elif [[ $1 != -q ]]; then
		echo "Done."
	fi
}

skipped=()
cd $src
for file in *; do
	src_file="$src/$file"
	if (( ${+config_map[$file]} )); then
		target_file="${config_map[$file]}"
	else
		target_file="$target/.$file"
	fi
	if [[ ${target_file:A} != ${src_file:A} ]]; then
		echo
		echo "* ${target_file/#$target\//~/}"
		if [[ -e $target_file ]]; then
			backup_file="$backup/$file"
			echo "  ! $target_file exists,"
			echo -n "      moving to $backup_file... "
			mkdir -p "$backup"
			check_status -q
			mv "$target_file" "$backup_file"
			check_status
		fi
		echo -n "  - Symlinking $target_file -> $src_file... "
		target_dir="${target_file:A:h}"
		if [[ "$target_dir" != "$target" && ! -d "$target_dir" ]]; then
			mkdir -p "$target_dir"
			check_status -q
		fi
		ln -srn "$src_file" "$target_file"
		check_status
	else
		skipped+=("$target_file -> $src_file")
	fi
done

echo
echo "Finished."

if [[ -n $skipped ]]; then
	echo
	echo "The following files/directories were already linked to the correct target:"
	for file in $skipped; do
		echo "  * $file"
	done
fi
